version: 2.1
#orbs:
#  node: circleci/node@3.0.0
executors:
  app-executor:
    docker:
      - image: circleci/node:12.14.0
    working_directory: ~/project

aliases:
  - &show-current-branch
    run:
      name: Show current branch
      command: echo ${CIRCLE_BRANCH}
  - &restore-cache
    - restore_cache:
        keys:
          - app-{{ checksum "package.json" }}
          - app-
  - &install-dependencies
    run:
        name: Install dependencies
        command: npm install
  - &save-cache
    run:
      save_cache:
        paths:
          - node_modules
        key: app-{{ checksum "package.json" }}
  - &install-aws-cli
    run:
      name: Install AWS CLI
      working_directory: /
      command: |
        sudo apt-get -y -qq update
        sudo apt-get install -y awscli
        sudo apt-get install -y python pip python-dev build-essential
  - &build-project
    run:
      name: Build Project
      command: |
        npm install
        npm run build
        cd build
        zip ../build.zip -r* .[^.]*
        echo "Build successful"

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy_to_aws_s3
          requires:
            - build
          filters:
            branches:
                only:
                  - master
      - deploy_to_aws_frontcloud
          requires:
              - deploy_to_aws_s3
            filters:
              branches:
                only:
                  - master
jobs:
  build:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch
      - *restore-cache
      - *install-dependencies
      - *save-cache
  deploy_to_aws_s3:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch
      - *install-aws-cli
      - *build-project
      - run:
          name: Deploy to AWS S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/project/build s3:://${AWS_BUCKET_PRODUCTION} --delete
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/project/build s3:://${AWS_BUCKET_STAGING} --delete
            else
              aws --region ${AWS_REGION} s3 sync ~/project/build s3:://${AWS_BUCKET_DEV} --delete
            fi

  deploy_to_aws_frontcloud:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch
      - *install-aws-cli
      - *build-project
      - run:
          name: Deploy to AWS cloudfronts
          command: |
            aws configure set preview.cloudfront true
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws cloudfront create-invalidation --distribution-id ${AWS_PRODUCTION_DISTRIBUTION_ID} --paths /\*
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws cloudfront create-invalidation --distribution-id ${AWS_STAGING_DISTRIBUTION_ID} --paths /\*
            else
              aws cloudfront create-invalidation --distribution-id ${AWS_DEV_DISTRIBUTION_ID} --paths /\*
            fi
